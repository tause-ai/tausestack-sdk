[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "tausestack-sdk"
version = "1.0.0"
description = "SDK completo multi-tenant con microservicios para desarrollo empresarial"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "TauseStack Team", email = "team@tausestack.dev"}
]
maintainers = [
    {name = "TauseStack Team", email = "team@tausestack.dev"}
]
keywords = [
    "sdk",
    "multi-tenant",
    "microservices",
    "storage",
    "cache",
    "notifications",
    "analytics",
    "billing",
    "ai",
    "colombia"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Database",
    "Topic :: Communications :: Email",
    "Topic :: Office/Business :: Financial",
]
requires-python = ">=3.9"
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "httpx>=0.25.0",
    "pydantic>=2.0.0",
    "sqlalchemy>=2.0.0",
    "alembic>=1.12.0",
    "redis>=5.0.0",
    "python-multipart>=0.0.6",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-dotenv>=1.0.0",
    "jinja2>=3.1.0",
    "aiofiles>=23.0.0",
    "tenacity>=8.2.0",
]

[project.optional-dependencies]
aws = [
    "boto3>=1.29.0",
    "botocore>=1.32.0",
]
gcp = [
    "google-cloud-storage>=2.10.0",
    "google-cloud-secret-manager>=2.16.0",
]
azure = [
    "azure-storage-blob>=12.19.0",
    "azure-keyvault-secrets>=4.7.0",
    "azure-identity>=1.15.0",
]
analytics = [
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "plotly>=5.17.0",
]
ai = [
    "openai>=1.3.0",
    "anthropic>=0.7.0",
    "tiktoken>=0.5.0",
]
payments = [
    "stripe>=7.0.0",
    "requests>=2.31.0",
]
all = [
    "tausestack-sdk[aws,gcp,azure,analytics,ai,payments]"
]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.6.0",
    "pre-commit>=3.5.0",
]

[project.urls]
Homepage = "https://github.com/tausestack/tausestack-sdk"
Documentation = "https://docs.tausestack.dev"
Repository = "https://github.com/tausestack/tausestack-sdk"
Issues = "https://github.com/tausestack/tausestack-sdk/issues"

[project.scripts]
tausestack = "tausestack.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["tausestack*"]

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.git
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["tausestack"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "redis.*",
    "boto3.*",
    "botocore.*",
    "google.*",
    "azure.*",
    "stripe.*",
    "openai.*",
    "anthropic.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=tausestack",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow tests",
    "aws: Tests requiring AWS",
    "gcp: Tests requiring GCP",
    "azure: Tests requiring Azure",
]
